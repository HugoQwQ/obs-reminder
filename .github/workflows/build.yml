name: Build OBS Reminder

on:
  push:
    tags:
      - "v*.*.*" # Trigger only for tags like v0.0.2

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      # Node.js environment for browser build
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "pnpm"

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      # Rust environment for app build
      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      # Build the browser component
      - name: Build browser frontend
        working-directory: browser
        run: |
          pnpm install
          pnpm run build

      # Build the Rust application
      - name: Build Rust application
        run: cargo build --release

      # Get version from Cargo.toml
      - name: Get version
        id: get_version
        shell: pwsh
        run: |
          $cargoToml = Get-Content "Cargo.toml" -Raw
          if ($cargoToml -match 'version\s*=\s*"([^"]+)"') {
              echo "version=$($matches[1])" >> $env:GITHUB_OUTPUT
          } else {
              throw "Could not read version from Cargo.toml"
          }

      # Package into ZIP
      - name: Package ZIP
        shell: pwsh
        run: |
          $version = "${{ steps.get_version.outputs.version }}"
          $outputDir = "obs-reminder-windows-x64-$version-stable"
          New-Item -ItemType Directory -Path $outputDir | Out-Null
          Copy-Item "target/release/obs-reminder.exe" $outputDir
          Copy-Item -Recurse "browser/dist" "$outputDir/browser"
          Compress-Archive -Path "$outputDir/*" -DestinationPath "$outputDir.zip" -Force

      # Upload build artifact
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: obs-reminder-windows
          path: "*.zip"
